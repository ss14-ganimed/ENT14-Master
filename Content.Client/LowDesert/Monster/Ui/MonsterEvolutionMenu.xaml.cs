using Content.Shared.LowDesert.Monster;
using Content.Shared.LowDesert.Monster.Components;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.LowDesert.Monster.Ui;

[GenerateTypedNameReferences]
public sealed partial class MonsterEvolutionMenu : DefaultWindow
{
	public event Action<BaseButton.ButtonEventArgs, MonsterEvolutionItemButton>? OnMonsterEvolutionItemButtonPressed;
	
	public MonsterEvolutionMenu ()
	{
		RobustXamlLoader.Load(this);
		IoCManager.InjectDependencies(this);
	}
	
	public void UpdateState(BoundUserInterfaceState state)
	{
		
		var castState = (MonsterEvolutionBoundUserInterfaceState) state;
		
		Items.Children.Clear();
		
		if (castState.Items is null)
			return;
		
		foreach (var item in castState.Items)
		{
			var button = new MonsterEvolutionItemButton(item);
			
			button.OnPressed += args => OnMonsterEvolutionItemButtonPressed?.Invoke(args, button);
			
			Items.AddChild(button);
		}	
	}
	
	public sealed class MonsterEvolutionItemButton : Button 
	{
		
        public MonsterEvolutionItem Item { get; }
		
        public MonsterEvolutionItemButton(MonsterEvolutionItem item)
        {
            Item = item;
        }
    }
}